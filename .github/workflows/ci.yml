name: akka-persistence-r2dbc CI

on:
  push:
    branches:
      - trunk
    tags:
      - v*
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    if: github.repository == 'chmodas/akka-persistence-r2dbc'
    runs-on: ubuntu-20.04
      #container: chmodas/docker-scala-sbt:11

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: s3cr3t
          POSTGRES_DB: db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: systemctl stuff
        run: systemctl status postgresql && systemctl status mysql
      - name: Import Postgres schema
        run: PGPASSWORD=s3cr3t psql -h 127.0.0.1 -U postgres -d db -f docker/postgresql-schema.sql
      - name: Start the Docker containers
        run: docker-compose -p akka-persistence -f docker/docker-compose.yml up -d mysql
      - name: Build and test with 2.12.x
        run: sbt ++2.12.13 test
      - name: Build and test with 2.13.x
        run: sbt ++2.13.4 test
      - name: Stop the Docker containers
        run: docker-compose -p akka-persistence -f docker/docker-compose.yml down
      - name: Publish 2.12.x
        if: ${{ github.event_name != 'pull_request' && github.event_name != 'schedule' }}
        run: sbt ++2.12.13 -Dbintray.user=${{secrets.BINTRAY_USER}} -Dbintray.pass=${{secrets.BINTRAY_PASS}} publish
      - name: Publish 2.13.x
        if: ${{ github.event_name != 'pull_request' && github.event_name != 'schedule' }}
        run: sbt ++2.13.4 -Dbintray.user=${{secrets.BINTRAY_USER}} -Dbintray.pass=${{secrets.BINTRAY_PASS}} publish
