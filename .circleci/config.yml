# CircleCI configuration file
version: 2.1
jobs:
  build:
    docker:
      - image: chmodas/docker-scala-sbt:11

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project/Dependencies.scala" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sbt -v '+ test:compile'

      - save_cache:
          paths:
            - ~/.sbt
            - ~/.ivy2
          key: v1-dependencies--{{ checksum "project/Dependencies.scala" }}

      # Create a separate environment for each build for security.
      # A step required to run docker and docker-compose commands.
      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Start the Docker Compose stack
          command: docker-compose -p akka-persistence -f docker/docker-compose.yml up -d

      - run:
          name: Build and test with 2.12.x and 2.13.x
          command: bash docker/circle-ci-tests-with-composed-containers

      - run:
          name: Stop the Docker Compose stack
          command: docker-compose -p akka-persistence -f docker/docker-compose.yml down

      - when:
          condition:
            or:
              - equal: [ trunk, <<pipeline.git.branch>> ]
              - equal: [ v*, <<pipeline.git.tag>> ]
          steps:
            - run: |
                export GPG_TTY=$(tty)
                echo ${PGP_SECRET} | base64 --decode | gpg --batch --import
                sbt '; + publishSigned'

      - when:
          condition:
              equal: [ v*, <<pipeline.git.tag>> ]
          steps:
            - run: |
                export GPG_TTY=$(tty)
                echo ${PGP_SECRET} | base64 --decode | gpg --batch --import
                sbt 'sonatypeBundleRelease'